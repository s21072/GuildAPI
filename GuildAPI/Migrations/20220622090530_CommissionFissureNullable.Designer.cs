// <auto-generated />
using System;
using GuildAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GuildAPI.Migrations
{
    [DbContext(typeof(MyDBContext))]
    [Migration("20220622090530_CommissionFissureNullable")]
    partial class CommissionFissureNullable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GuildAPI.Models.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("Post")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("AddressId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("GuildAPI.Models.Adventurers", b =>
                {
                    b.Property<string>("Pesel")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("CommissionID")
                        .HasColumnType("int");

                    b.Property<int>("Int")
                        .HasMaxLength(4)
                        .HasColumnType("int");

                    b.Property<int>("Spd")
                        .HasMaxLength(4)
                        .HasColumnType("int");

                    b.Property<int>("Str")
                        .HasMaxLength(4)
                        .HasColumnType("int");

                    b.Property<int?>("TeamID")
                        .HasColumnType("int");

                    b.Property<int>("Vit")
                        .HasMaxLength(4)
                        .HasColumnType("int");

                    b.HasKey("Pesel");

                    b.HasIndex("CommissionID");

                    b.HasIndex("TeamID");

                    b.ToTable("Adventurers");
                });

            modelBuilder.Entity("GuildAPI.Models.CEO", b =>
                {
                    b.Property<string>("Pesel")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Pesel");

                    b.ToTable("CEOs");
                });

            modelBuilder.Entity("GuildAPI.Models.Commission", b =>
                {
                    b.Property<int>("CommissionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AcceptTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CommissionType")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("FinishTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FissureID")
                        .HasColumnType("int");

                    b.Property<int?>("FissureID1")
                        .HasColumnType("int");

                    b.Property<int>("MinRank")
                        .HasColumnType("int");

                    b.Property<string>("Pesel")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Rates")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<float>("Reword")
                        .HasColumnType("real");

                    b.Property<int>("TeamID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("CommissionID");

                    b.HasIndex("FissureID");

                    b.HasIndex("FissureID1");

                    b.HasIndex("Pesel");

                    b.HasIndex("TeamID");

                    b.ToTable("Commissions");
                });

            modelBuilder.Entity("GuildAPI.Models.Country", b =>
                {
                    b.Property<int>("CountryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FissureID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryID");

                    b.HasIndex("FissureID");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("GuildAPI.Models.Equipment", b =>
                {
                    b.Property<int>("EquipmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("Rank")
                        .HasColumnType("int");

                    b.HasKey("EquipmentID");

                    b.ToTable("Equipment");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Equipment");
                });

            modelBuilder.Entity("GuildAPI.Models.Fissure", b =>
                {
                    b.Property<int>("FissureID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FindDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FissureTypes")
                        .HasColumnType("int");

                    b.Property<float>("NSLoc")
                        .HasColumnType("real");

                    b.Property<float>("OSLev")
                        .HasColumnType("real");

                    b.Property<int?>("Rank")
                        .HasColumnType("int");

                    b.Property<float>("WELoc")
                        .HasColumnType("real");

                    b.HasKey("FissureID");

                    b.ToTable("Fissures");
                });

            modelBuilder.Entity("GuildAPI.Models.GuildWorker", b =>
                {
                    b.Property<string>("Pesel")
                        .HasColumnType("nvarchar(450)");

                    b.Property<float?>("Bonus")
                        .HasColumnType("real");

                    b.Property<int>("NymberOfCommissionsDone")
                        .HasColumnType("int");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.Property<int>("WorkRole")
                        .HasColumnType("int");

                    b.HasKey("Pesel");

                    b.ToTable("GuildWorkers");
                });

            modelBuilder.Entity("GuildAPI.Models.Lend", b =>
                {
                    b.Property<int>("LendID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EquipmentID")
                        .HasColumnType("int");

                    b.Property<DateTime>("From")
                        .HasColumnType("datetime2");

                    b.Property<int>("HowMuch")
                        .HasColumnType("int");

                    b.Property<string>("Pesel")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("To")
                        .HasColumnType("datetime2");

                    b.Property<int>("TrainingID")
                        .HasColumnType("int");

                    b.HasKey("LendID");

                    b.HasIndex("EquipmentID");

                    b.HasIndex("Pesel");

                    b.HasIndex("TrainingID");

                    b.ToTable("Lends");
                });

            modelBuilder.Entity("GuildAPI.Models.Person", b =>
                {
                    b.Property<string>("Pesel")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Birth")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAdventurer")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("Rank")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Retirement")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Pesel");

                    b.HasIndex("AddressId");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("GuildAPI.Models.Team", b =>
                {
                    b.Property<int>("TeamID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("TeamID");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("GuildAPI.Models.Training", b =>
                {
                    b.Property<int>("TrainingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Attribute")
                        .HasColumnType("int");

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.Property<int>("TeamID")
                        .HasColumnType("int");

                    b.Property<string>("Theme")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("TrainingID");

                    b.HasIndex("TeamID");

                    b.ToTable("Trainings");
                });

            modelBuilder.Entity("GuildAPI.Models.Defensive", b =>
                {
                    b.HasBaseType("GuildAPI.Models.Equipment");

                    b.Property<int>("Def")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int")
                        .HasColumnName("Def");

                    b.HasDiscriminator().HasValue("Defensive");
                });

            modelBuilder.Entity("GuildAPI.Models.Offensive", b =>
                {
                    b.HasBaseType("GuildAPI.Models.Equipment");

                    b.Property<int>("Dmg")
                        .HasColumnType("int")
                        .HasColumnName("Dmg");

                    b.HasDiscriminator().HasValue("Offensive");
                });

            modelBuilder.Entity("GuildAPI.Models.MixedEq", b =>
                {
                    b.HasBaseType("GuildAPI.Models.Offensive");

                    b.Property<int>("Def")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int")
                        .HasColumnName("Def");

                    b.HasDiscriminator().HasValue("MixedEq");
                });

            modelBuilder.Entity("GuildAPI.Models.Adventurers", b =>
                {
                    b.HasOne("GuildAPI.Models.Commission", "Commission")
                        .WithMany()
                        .HasForeignKey("CommissionID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("GuildAPI.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("Pesel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GuildAPI.Models.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Commission");

                    b.Navigation("Person");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("GuildAPI.Models.CEO", b =>
                {
                    b.HasOne("GuildAPI.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("Pesel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("GuildAPI.Models.Commission", b =>
                {
                    b.HasOne("GuildAPI.Models.Fissure", "Fissure")
                        .WithMany()
                        .HasForeignKey("FissureID");

                    b.HasOne("GuildAPI.Models.Fissure", null)
                        .WithMany("Commission")
                        .HasForeignKey("FissureID1");

                    b.HasOne("GuildAPI.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("Pesel");

                    b.HasOne("GuildAPI.Models.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fissure");

                    b.Navigation("Person");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("GuildAPI.Models.Country", b =>
                {
                    b.HasOne("GuildAPI.Models.Fissure", null)
                        .WithMany("Country")
                        .HasForeignKey("FissureID");
                });

            modelBuilder.Entity("GuildAPI.Models.GuildWorker", b =>
                {
                    b.HasOne("GuildAPI.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("Pesel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("GuildAPI.Models.Lend", b =>
                {
                    b.HasOne("GuildAPI.Models.Equipment", "Equipment")
                        .WithMany()
                        .HasForeignKey("EquipmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GuildAPI.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("Pesel");

                    b.HasOne("GuildAPI.Models.Training", "Training")
                        .WithMany()
                        .HasForeignKey("TrainingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipment");

                    b.Navigation("Person");

                    b.Navigation("Training");
                });

            modelBuilder.Entity("GuildAPI.Models.Person", b =>
                {
                    b.HasOne("GuildAPI.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("GuildAPI.Models.Training", b =>
                {
                    b.HasOne("GuildAPI.Models.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");
                });

            modelBuilder.Entity("GuildAPI.Models.Fissure", b =>
                {
                    b.Navigation("Commission");

                    b.Navigation("Country");
                });
#pragma warning restore 612, 618
        }
    }
}
